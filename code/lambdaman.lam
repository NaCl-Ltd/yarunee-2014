; 壁にぶつかったら避けるシンプルなAI

; 現在位置を取得
(define (current_pos world) (car (cdr (car (cdr world)))))

; cons+cons=cons
(define (plus_cons c1 c2)
  (cons (+ (car c1) (car c2)) (+ (cdr c1) (cdr c2))))

; 指定した(x,y)の位置の数値を取得 map_pos（TODO: dummy）
(define (map_pos xy) 1)

; 指定した方向のスペースが空いているか？
(define (is_empty_pos map_pos world dir_cons)
  (if (> (map_pos (plus_cons (current_pos world) dir_cons) (car world)) 0)
    1 0))

(cons 0
  (lambda (state world)
    (let1 map_pos
      (lambda (x y map) (
        (lambda (search) (search search y (search search x map)))
        (lambda (self x li) (
          if (= x 0) (car li) (self self (- x 1) (cdr li))
          ))
        ))

    ; ダウン可能か？
    (if (is_empty_pos map_pos world (cons 0 1))
      (cons state 2)
      ; アップ可能か？
      (if (is_empty_pos map_pos world (cons 0 -1))
        (cons state 0)
        ; 右に行けるか？
        (if (is_empty_pos map_pos world (cons 1 0))
          (cons state 1)
          ; 左に行くしかない
          (cons state 3))))
    )
))