; 最初の数ターンは気まぐれAI
jeq (fickleend),[254],1
jgt (fickle),[254],0
mov [254],20
fickle:
mov a,255      ; A is the min value.
mov b,0        ; B is the corresponding direction.
mov c,255      ; C is the candidate direction for the new min.
fickleloop:
inc c          ; Pick new direction.
jgt (fickleloopend),[c],a    ; Jump if count of direction C is above best so far.
; We have a new min.
mov a,[c]      ; Save new min.
mov b,c        ; Save direction.
jlt (fickleloop),c,3      ; Jump target. Loop back if we have not tried all 4 directions.
fickleloopend:
mov a,b        ; Actually set desired direction.
int 0
int 3          ; Get our ghost index in A.
int 6          ; Get out current direction in B.
inc [b]        ; Increment corresponding count.
dec [254]
mov a,0
mov b,0
hlt            ; Stop.
fickleend:


; ランダム値が入っていたらjump
mov a,d
jgt (seedrandom),a,0

; ghostの位置をシードにする
int 4
int 5
add a,b

; IN <- reg A seed
; OUT -> reg A ランダムな数値
seedrandom:
mul a,61
add a,5   ; (seed*61)+5
and a,255 ; mod 256

; d にシード値を格納
mov d,a
and a,3 ; 0b11でマスク
int 0
hlt